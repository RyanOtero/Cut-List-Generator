<Window x:Name="CutList_Generator" x:Class="Solid_Price.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:Solid_Price.ViewModels"
        Title="Solid Price" Height="531" Width="927" WindowStyle="None" SizeToContent="Manual"
        Style="{DynamicResource ResourceKey=SkinWindowStyle}">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="b2v" />
        <vm:MainViewModel x:Key="ViewModel" />
    </Window.Resources>
    <Window.DataContext>
        <StaticResource ResourceKey="ViewModel" />
    </Window.DataContext>
    <!--Content-->
    <TabControl Style="{DynamicResource TabControlStyle}" Grid.Row="1" Margin="0,0,0,0">
        <TabItem Header="Cut List" Style="{DynamicResource TabItemStyle}" Margin="-2,0,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="120" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="15"/>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="40" />
                    <RowDefinition Height="40" />
                    <RowDefinition Height="40" />
                    <RowDefinition Height=".4*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Label x:Name="filePathLabel" Content="File Path:&#xA;" FontSize="16" Margin="16,0,0,6" HorizontalAlignment="Left" HorizontalContentAlignment="Left" VerticalAlignment="Bottom" Width="80" Height="30" Grid.Column="0" Grid.Row="1"  Grid.ColumnSpan="2"/>
                <TextBox x:Name="filePathTextBox" Margin="25,0,10,7.5" AcceptsReturn="False" TextWrapping="NoWrap" VerticalAlignment="Bottom" Text="{Binding Path=SourceText, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="1" />
                <Button x:Name="sourceBrowseButton" Content="Browse" Command="{Binding SourceBrowseCommand}" Grid.Column="2" Grid.Row="1" />
                <Button x:Name="generateButton" Content="Generate" Command="{Binding GenerateCommand}" Grid.Column="2" Grid.Row="2" />
                <Button x:Name="saveButton" Content="Save" Command="{Binding SaveCommand}" Grid.Column="2" Grid.Row="3" />
                <Button x:Name="refreshButton" Content="Refresh" Command="{Binding RefreshCommand}" Grid.Column="2" Grid.Row="4" />
                <Button x:Name="clearButton" Content="Clear" Command="{Binding ClearCommand}"  Grid.Column="3" Grid.Row="5" VerticalAlignment="Top" Margin="0,5,0,0" />
                <CheckBox x:Name="detailedCutListCheckBox" IsChecked="{Binding IsDetailed, Mode=TwoWay}" Content="Detailed Cut List" Command="{Binding IsDetailedCommand}" HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Center" FlowDirection="RightToLeft" Grid.Column="1" Grid.Row="2">
                    <CheckBox.Resources>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="FlowDirection" Value="LeftToRight" />
                        </Style>
                    </CheckBox.Resources>
                </CheckBox>
                <CheckBox x:Name="showPricingCheckBox" IsChecked="{Binding ShowPricing, Mode=TwoWay}" Content="Show Pricing" HorizontalAlignment="Right" Margin="0,0,150,0" VerticalAlignment="Center" FlowDirection="RightToLeft" Grid.Column="1" Grid.Row="2">
                    <CheckBox.Resources>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="FlowDirection" Value="LeftToRight" />
                        </Style>
                    </CheckBox.Resources>
                </CheckBox>
                <Label Content="Order List" Grid.Column="0" FontSize="18" HorizontalAlignment="Left" Grid.Row="3" Grid.ColumnSpan="2" Margin="18,-24,0,0" />
                <DataGrid x:Name="orderListDataGrid" AutoGenerateColumns="False" HeadersVisibility="Column" CanUserAddRows="False" ItemsSource="{Binding OrderList}" Margin="20,5,10,35" Grid.Column="0" Grid.Row="3" Grid.RowSpan="3" Grid.ColumnSpan="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Path=Qty, Mode=OneWay}" Header="Qty" Width="*" />
                        <DataGridTextColumn Binding="{Binding Path=Description, Mode=OneWay}" Header="Description" Width="7.5*" />
                        <DataGridTextColumn Binding="{Binding Path=StockLengthInFeet, Mode=OneWay}" Header="Length (FT)" Width="2.25*" />
                        <DataGridTextColumn Binding="{Binding Path=CostPerLengthString, Mode=OneWay}" Header="Cost Each" Width="2*" />
                        <DataGridTextColumn Binding="{Binding Path=TotalCost, Mode=OneWay}" Header="Total" Width="2*" />
                        <DataGridTextColumn Binding="{Binding Path=VendorName, Mode=OneWay}" Header="Vendor" Width="2.5*" />
                    </DataGrid.Columns>
                </DataGrid>
                <Label Content="{Binding OrderTotal}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="5" Margin="-180,0,80,0" Height="30" Width="160" />
                <Label Content="Cut List" Grid.Column="0" FontSize="18" HorizontalAlignment="Left" Grid.Row="6" Grid.ColumnSpan="2" Margin="18,-24,0,0" />
                <DataGrid x:Name="cutListDataGrid" AutoGenerateColumns="False" HeadersVisibility="Column" CanUserAddRows="False" ItemsSource="{Binding CutList}" Margin="20,5,20,35" Grid.Row="6" Grid.ColumnSpan="3">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Path=Qty, Mode=OneWay}" Header="Qty" Width="1.5*" />
                        <DataGridTextColumn Binding="{Binding Path=Description, Mode=OneWay}" Header="Description" Width="8.5*" />
                        <DataGridTextColumn Binding="{Binding Path=Length, Mode=OneWay}" Header="Length (IN)" Width="2.75*" />
                        <DataGridTextColumn Binding="{Binding Path=Angle1, Mode=OneWay}" Header="Angle 1" Width="2*" />
                        <DataGridTextColumn Binding="{Binding Path=Angle2, Mode=OneWay}" Header="Angle 2" Width="2*" />
                        <DataGridTextColumn Binding="{Binding Path=AngleDirection, Mode=OneWay}" Header="Direction" Width="2.5*" />
                        <DataGridTextColumn Binding="{Binding Path=AngleRotation, Mode=OneWay}" Header="Rotation" Width="2.25*" />
                        <DataGridTextColumn Binding="{Binding Path=StickNumberString, Mode=OneWay}" Header="Stick No." Width="2.5*" Visibility="{Binding IsDetailed, Source={StaticResource ViewModel}, Converter={StaticResource b2v}}" />
                        <DataGridTextColumn Binding="{Binding Path=Cost, Mode=OneWay}" Header="Cost Each" Width="2.5*" Visibility="{Binding ShowPricing, Source={StaticResource ViewModel},Converter={StaticResource b2v}}" />
                        <DataGridTextColumn Binding="{Binding Path=TotalCost, Mode=OneWay}" Header="Total" Width="2*" Visibility="{Binding ShowPricing, Source={StaticResource ViewModel}, Converter={StaticResource b2v}}" />
                    </DataGrid.Columns>
                </DataGrid>
                <Label Content="{Binding CutListTotal}" VerticalAlignment="Bottom" Grid.Column="2" Grid.Row="6" Margin="-90,0,0,0" Height="30" Width="160" />
                <Label x:Name="loadingLabel1" Content="{Binding LoadingText}" Visibility="{Binding IsLoading, Converter={StaticResource b2v}}" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" />
                <Label x:Name="loadingLabel2" Content="{Binding LoadingText}" Visibility="{Binding IsLoading, Converter={StaticResource b2v}}" Grid.Column="0" Grid.Row="7" Grid.ColumnSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" />
            </Grid>
        </TabItem>
        <TabItem Header="Vendors" Style="{DynamicResource TabItemStyle}" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Width="320" Height="60" VerticalAlignment="Top" Margin="20,0,0,10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0">
                    <Button x:Name="addVendorButton" Content="Add" Command="{Binding AddVendorCommand}"  Margin="5"/>
                    <Button x:Name="deleteVendorButton" Content="Delete" Command="{Binding DeleteVendorCommand}" Margin="5"/>
                    <Button x:Name="editVendorsButton" Content="Edit" Command="{Binding EditVendorCommand}" Margin="5"/>
                </StackPanel>
                <DataGrid x:Name="vendorDataGrid" ItemsSource="{Binding Path=Vendors}" SelectedItem="{Binding SelectedVendor, Mode=TwoWay}" HeadersVisibility="Column" CanUserAddRows="False" AutoGenerateColumns="False" Margin="20,0,20,20" Grid.Column="0" Grid.Row="1">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Path=VendorName, Mode=OneWay}" Header="Vendor Name" Width="3*" />
                        <DataGridTextColumn Binding="{Binding Path=PhoneNumber, Mode=OneWay}" Header="Phone Number" Width="2*" />
                        <DataGridTextColumn Binding="{Binding Path=ContactName, Mode=OneWay}" Header="Contact Name" Width="2*" />
                        <DataGridTextColumn Binding="{Binding Path=ContactEmail, Mode=OneWay}" Header="Contact Email" Width="2*" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>
        <TabItem Header="Stock Types" Style="{DynamicResource TabItemStyle}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Width="320" Height="60" VerticalAlignment="Top" Margin="20,0,0,10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0">
                    <Button x:Name="addStockItemButton" Content="Add" Command="{Binding AddStockItemCommand}"  Margin="5"/>
                    <Button x:Name="deleteStockItemButton" Content="Delete" Command="{Binding DeleteStockItemCommand}" Margin="5"/>
                    <Button x:Name="editStockItemsButton" Content="Edit" Command="{Binding EditVendorCommand}" Margin="5"/>
                </StackPanel>
                <DataGrid x:Name="StockItemsDataGrid" ItemsSource="{Binding Path=StockItems}" SelectedItem="{Binding SelectedStockItem, Mode=TwoWay}" HeadersVisibility="Column" CanUserAddRows="False" AutoGenerateColumns="False" Margin="20,0,20,20" Grid.Column="0" Grid.Row="1">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Path=VendorName, Mode=OneWay}" Header="Vendor" Width="*" />
                        <DataGridTextColumn Binding="{Binding Path=VendorItemNumber, Mode=OneWay}" Header="Item #" Width="*" />
                        <DataGridTextColumn Binding="{Binding Path=MatTypeString, Mode=OneWay}" Header="Material Type" Width="1.6*" />
                        <DataGridTextColumn Binding="{Binding Path=ProfTypeString, Mode=OneWay}" Header="Profile Type" Width="1.6*" />
                        <DataGridTextColumn Binding="{Binding Path=CostPerFootString, Mode=OneWay}" Header="Cost/FT" Width="1*" />
                        <DataGridTextColumn Binding="{Binding Path=CostPerLengthString, Mode=OneWay}" Header="Cost/Length" Width="1.5*" />
                        <DataGridTextColumn Binding="{Binding Path=StockLength, Mode=OneWay}" Header="Stock Length" Width="1.5*" />
                        <DataGridTextColumn Binding="{Binding Path=InternalDescription, Mode=OneWay}" Header="Internal Description" Width="3*" />
                        <DataGridTextColumn Binding="{Binding Path=ExternalDescription, Mode=OneWay}" Header="External Description" Width="3*" />
                        
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>
        <TabItem Header="Configuration" Style="{DynamicResource TabItemStyle}" >
            <Grid>
                <Grid Width="400" Height="300">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".35*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <CheckBox x:Name="UseExternalDBCheckBox" IsChecked="{Binding UseExternalDB, Mode=TwoWay}" Content="Use External MySQL Database" FlowDirection="RightToLeft" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,0,0" Grid.Column="1" Grid.Row="0">
                        <CheckBox.Resources>
                            <Style TargetType="{x:Type Path}">
                                <Setter Property="FlowDirection" Value="LeftToRight" />
                            </Style>
                        </CheckBox.Resources>
                    </CheckBox>
                    <Label Content="Server: " HorizontalAlignment="Right" Margin="0,0,0,5" VerticalAlignment="Center" Height="Auto" VerticalContentAlignment="Center" Grid.Column="0" Grid.Row="1" />
                    <TextBox x:Name="ServerTextBox" Margin="0,0,0,0" IsEnabled="{Binding UseExternalDB}" AcceptsReturn="False" TextWrapping="NoWrap" VerticalAlignment="Center" Height="Auto" VerticalContentAlignment="Center" Text="{Binding ServerString, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="1" />
                    <Label Content="Database: " HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Center" Height="Auto" VerticalContentAlignment="Center" Grid.Column="0" Grid.Row="2" />
                    <TextBox x:Name="DatabaseTextBox" Margin="0,0,0,0" IsEnabled="{Binding UseExternalDB}" AcceptsReturn="False" TextWrapping="NoWrap" VerticalAlignment="Center" Height="Auto" VerticalContentAlignment="Center" Text="{Binding DatabaseString, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="2" />
                    <Label Content="User: " HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Center" Height="Auto" VerticalContentAlignment="Center" Grid.Column="0" Grid.Row="3" />
                    <TextBox x:Name="UserTextBox" Margin="0,0,0,0" IsEnabled="{Binding UseExternalDB}" AcceptsReturn="False" TextWrapping="NoWrap" VerticalAlignment="Center" Height="Auto" VerticalContentAlignment="Center" Text="{Binding UserString, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="3" />
                    <Label Content="Password: " HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Center" Height="Auto" VerticalContentAlignment="Center" Grid.Column="0" Grid.Row="4" />
                    <TextBox x:Name="PasswordTextBox" Margin="0,0,0,0" IsEnabled="{Binding UseExternalDB}" AcceptsReturn="False" TextWrapping="NoWrap" VerticalAlignment="Center" Height="Auto" VerticalContentAlignment="Center" Text="{Binding PasswordString, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="4" />
                </Grid>
            </Grid>
        </TabItem>
    </TabControl>
</Window>
